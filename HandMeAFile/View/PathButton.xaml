<Button x:Class="org.ek.HandMeAFile.View.PathButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:org.ek.HandMeAFile.View"
             xmlns:converter="clr-namespace:org.ek.HandMeAFile.commons.UI.WPF.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="450">
    <Button.Resources>
        <Geometry x:Key="DefaultSVG">M24 9h-9v-9h-6v9h-9v6h9v9h6v-9h9z</Geometry>
    </Button.Resources>
    <Button.Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="BorderThickness" Value="4"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Bd"
                                SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Style>
    <Path  
          Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:PathButton}, Path=PathData, FallbackValue={StaticResource DefaultSVG}}"
          Stretch="Uniform">
        <Path.Style>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:PathButton}, Path=Color, FallbackValue={x:Static Brushes.Red}}"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Command, Converter={converter:ObjectNotNullToBoolConverter}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:PathButton}, Path=MouseOverColor, FallbackValue={x:Null}}"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Path.Style>
        </Path>
</Button>
